{"id":"../node_modules/planck-js/lib/util/create.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/util/create.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../node_modules/planck-js/lib/util/create.js":"if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n"},"lineCount":17}},"error":null,"hash":"b16fb8cc8e02bde9c86d142d7910ddf0","cacheData":{"env":{}}}