{"id":"../node_modules/planck-js/lib/Body.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"./util/common","loc":{"line":25,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/common.js"},{"name":"./util/options","loc":{"line":26,"column":22},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/options.js"},{"name":"./common/Vec2","loc":{"line":28,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Vec2.js"},{"name":"./common/Rot","loc":{"line":29,"column":18},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Rot.js"},{"name":"./common/Math","loc":{"line":30,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Math.js"},{"name":"./common/Sweep","loc":{"line":31,"column":20},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js"},{"name":"./common/Transform","loc":{"line":32,"column":24},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Transform.js"},{"name":"./common/Velocity","loc":{"line":33,"column":23},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Velocity.js"},{"name":"./common/Position","loc":{"line":34,"column":23},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Position.js"},{"name":"./Fixture","loc":{"line":36,"column":22},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Fixture.js"},{"name":"./Shape","loc":{"line":37,"column":20},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Body.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Shape.js"}],"generated":{"js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1076,"column":0},"generated":{"line":1076,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1077,"column":0},"generated":{"line":1077,"column":0}},{"source":"../node_modules/planck-js/lib/Body.js","original":{"line":1078,"column":0},"generated":{"line":1078,"column":0}}],"sources":{"../node_modules/planck-js/lib/Body.js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n"},"lineCount":1078}},"error":null,"hash":"816db4fd31304920cf81871df7717653","cacheData":{"env":{}}}