{"id":"../node_modules/planck-js/lib/shape/BoxShape.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/common","loc":{"line":25,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/BoxShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/common.js"},{"name":"../util/create","loc":{"line":26,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/BoxShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/create.js"},{"name":"./PolygonShape","loc":{"line":27,"column":27},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/BoxShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js"}],"generated":{"js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/planck-js/lib/shape/BoxShape.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}}],"sources":{"../node_modules/planck-js/lib/shape/BoxShape.js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n"},"lineCount":47}},"error":null,"hash":"534f2b5ad08d956197703f5c0e7311fb","cacheData":{"env":{}}}