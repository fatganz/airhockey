{"id":"../node_modules/planck-js/lib/shape/PolygonShape.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/common","loc":{"line":25,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/common.js"},{"name":"../util/create","loc":{"line":26,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/create.js"},{"name":"../util/options","loc":{"line":27,"column":22},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/options.js"},{"name":"../common/Math","loc":{"line":28,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Math.js"},{"name":"../common/Transform","loc":{"line":29,"column":24},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Transform.js"},{"name":"../common/Rot","loc":{"line":30,"column":18},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Rot.js"},{"name":"../common/Vec2","loc":{"line":31,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Vec2.js"},{"name":"../collision/AABB","loc":{"line":32,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/collision/AABB.js"},{"name":"../Settings","loc":{"line":33,"column":23},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Settings.js"},{"name":"../Shape","loc":{"line":34,"column":20},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Shape.js"}],"generated":{"js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = data.vertices && data.vertices.map(v => Vec2._deserialize(v));\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/planck-js/lib/shape/PolygonShape.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}}],"sources":{"../node_modules/planck-js/lib/shape/PolygonShape.js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = data.vertices && data.vertices.map(v => Vec2._deserialize(v));\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n"},"lineCount":518}},"error":null,"hash":"7909bbfffb8a974eb02fe85dd76386ff","cacheData":{"env":{}}}