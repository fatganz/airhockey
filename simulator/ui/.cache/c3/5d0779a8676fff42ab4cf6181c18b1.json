{"id":"../node_modules/planck-js/lib/common/Sweep.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/common","loc":{"line":25,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/common.js"},{"name":"./Math","loc":{"line":26,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Math.js"},{"name":"./Vec2","loc":{"line":27,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Vec2.js"},{"name":"./Rot","loc":{"line":28,"column":18},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Rot.js"},{"name":"./Transform","loc":{"line":29,"column":24},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Sweep.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Transform.js"}],"generated":{"js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/planck-js/lib/common/Sweep.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}}],"sources":{"../node_modules/planck-js/lib/common/Sweep.js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n"},"lineCount":132}},"error":null,"hash":"5d742f97279a12e46a3eff6e401f076c","cacheData":{"env":{}}}