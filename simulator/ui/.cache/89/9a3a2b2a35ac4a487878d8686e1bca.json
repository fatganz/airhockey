{"id":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","dependencies":[{"name":"/Users/petro/Documents/physics/ui/package.json","includedInParent":true,"mtime":1604783233189},{"name":"/Users/petro/Documents/physics/ui/node_modules/planck-js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../util/common","loc":{"line":23,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/common.js"},{"name":"../util/create","loc":{"line":24,"column":21},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/util/create.js"},{"name":"../common/Math","loc":{"line":25,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Math.js"},{"name":"../common/Transform","loc":{"line":26,"column":24},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Transform.js"},{"name":"../common/Vec2","loc":{"line":27,"column":19},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Vec2.js"},{"name":"../common/Rot","loc":{"line":28,"column":18},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/common/Rot.js"},{"name":"../Settings","loc":{"line":29,"column":23},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Settings.js"},{"name":"../Shape","loc":{"line":30,"column":20},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Shape.js"},{"name":"../Contact","loc":{"line":31,"column":22},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Contact.js"},{"name":"../Manifold","loc":{"line":32,"column":23},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/Manifold.js"},{"name":"./EdgeShape","loc":{"line":33,"column":24},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/EdgeShape.js"},{"name":"./ChainShape","loc":{"line":34,"column":25},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/ChainShape.js"},{"name":"./PolygonShape","loc":{"line":35,"column":27},"parent":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/CollideEdgePolygon.js","resolved":"/Users/petro/Documents/physics/ui/node_modules/planck-js/lib/shape/PolygonShape.js"}],"generated":{"js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}}],"sources":{"../node_modules/planck-js/lib/shape/CollideEdgePolygon.js":"/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n"},"lineCount":484}},"error":null,"hash":"09cdd4bfb6110e5bb0fd51bbfa5e6327","cacheData":{"env":{}}}